from landsatbuoycalib import atmo_data
import numpy
import unittest

# arrays
q = [0.00485500135, 0.00473400205, 0.00457400084, 0.00404700078, 0.00338800065, 0.00301200151, 0.00251000188, 0.00204600208, 0.00157800131, 0.00110600144, 0.000741001219, 0.000581, 0.000577002764, 0.000620000064, 0.000382002443, 0.00016900152, 0.000180002302, 8.70004296e-05, 7.50012696e-05, 7.60033727e-05, 5.70006669e-05, 4.80003655e-05, 3.60012054e-05, 2.60025263e-05, 2.29999423e-05, 1.90027058e-05, 1.30012631e-05, 6.99982047e-06, 5.00306487e-06]
t = [283.08999634, 280.98999023, 278.91998291, 277.04998779, 276.17999268, 274.66998291, 274.22998047, 273.85998535, 273.39001465, 272.60998535, 271.59997559, 270.25, 268.58999634, 264.8999939, 260.84997559, 256.02001953, 250.58999634, 245.41000366, 240.92999268, 237.06999207, 233.11999512, 230.97999573, 229.27000427, 227.75, 226.27999878, 225.22999573, 223.0, 219.6000061, 216.16999817]
p = [1000.0, 975.0, 950.0, 925.0, 900.0, 875.0, 850.0, 825.0, 800.0, 775.0, 750.0, 725.0, 700.0, 650.0, 600.0, 550.0, 500.0, 450.0, 400.0, 350.0, 300.0, 275.0, 250.0, 225.0, 200.0, 175.0, 150.0, 125.0, 100.0]
rh = [ 63.85119917,  69.95455724,  75.91749626,  74.51760499, 64.53928604,  62.1174165 ,  51.89948737,  42.17017419, 32.62844689,  23.44605133,  16.36810559,  13.70774282, 14.88278885,  19.69611411,  15.43246232,   9.30932947, 14.38096525,   9.98445144,  11.677769  ,  15.1258643 , 14.54489976,  14.05735428,  11.51037954,   8.82786601,  8.16456302,   6.63818259,   5.01725093,   3.35253509,   2.90748453]

# convert_sh_rh
class TestConvertSH2RH(unittest.TestCase):

    def test_good_numbers(self):
        for i in range(len(q)):
            self.assertAlmostEqual(atmo_data.convert_sh_rh(q[i], t[i], p[i]), rh[i], places = 5)

    def test_good_array(self):
        self.assertEqual(list(atmo_data.convert_sh_rh(numpy.asarray(q), numpy.asarray(t), numpy.asarray(p)).round(4)), list(numpy.around(rh, 4)))

# dewpoint_temp
dewp = [2.71023178,   1.83089599,   0.95347595,  -1.19649659, -4.06215362,  -6.05653992,  -8.54012604, -10.85598297, -13.2342987 , -15.85080681, -18.27640495, -20.15845261, -21.58344726, -24.31078529, -29.2135334 , -35.26811543, -39.68381195, -45.74310742, -49.88445434, -53.05483665, -57.12102661, -59.35853576, -61.57792111, -63.63442802, -65.23708992, -66.59236841, -69.14655046, -72.87948728, -76.39850535]

class TestCalcDewpointTemp(unittest.TestCase):
    
    def test_good_values(self):
        for i in range(len(t)):
            self.assertAlmostEqual(atmo_data.dewpoint_temp(t[i] - 273.15, rh[i]), dewp[i], places = 4)

    def test_good_array(self):  
        self.assertEqual(list(atmo_data.dewpoint_temp(numpy.array(t) - 273.15, numpy.array(rh)).round(3)), list(numpy.around(dewp, 3)))

# convert_geopotential_geometric
# distance_in_utm

# interpolate_time

# offset
# calc_interp_weights
# use_interp_weights

# direct
# bilinear_interpolation

